{
  "name": "express-less-middleware",
  "version": "1.1.3",
  "description": "Compiles LESS on a per request basis in Express",
  "main": "./lib/less-middleware",
  "license": "MIT",
  "author": {
    "name": "Alex Vernacchia",
    "email": "alvernacchia@gmail.com"
  },
  "contributors": [
    {
      "name": "Jeremy Gerrits",
      "email": "danjersoftware@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/vernak2539/express-less-middleware.git"
  },
  "dependencies": {
    "less": "~1.5.1"
  },
  "scripts": {
    "test": "istanbul cover _mocha --report lcovonly -- test/*.js --reporter list --timeout 100000 && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "devDependencies": {
    "mocha": "~1.15.1",
    "sinon": "~1.7.3",
    "mocha-lcov-reporter": "0.0.1",
    "coveralls": "~2.6.1",
    "istanbul": "~0.2.3"
  },
  "readme": "##Express LESS Middleware [![Build Status](https://travis-ci.org/vernak2539/express-less-middleware.png?branch=master)](https://travis-ci.org/vernak2539/express-less-middleware) [![Coverage Status](https://coveralls.io/repos/vernak2539/express-less-middleware/badge.png?branch=coveralls_support)](https://coveralls.io/r/vernak2539/express-less-middleware?branch=master)\n\nThis middleware is designed to compile LESS on the fly.\n\n###Installing\n\n```js\nnpm install express-less-middleware --save\n```\n\n**Should only be used for development. LESS should be compiled during a build process**\n\n###What this does (per request)\n\n1. Determines if file requested is: (if conditions aren't met it runs `next()`)\n    1. requested via GET method\n    2. a CSS file\n2. Looks for CSS file requested\n    * if found it will let it go through the original flow via next\n3. Looks for a LESS file with the same name as the CSS file requested\n    * if LESS file is found it will read that file and compile it to CSS and deliever the response\n4. If no LESS or CSS file is found, it will give you a 404 like usual\n\n###What this doesn't do\n\n1. Look for changes on save (if you use it, you won't need a grunt watch on less files)\n\n###Example\n\n```js\nvar http         = require( 'http' );\nvar express      = require( 'express' );\nvar app          = express();\n\n// this assumes that the publicly available folder is on the same directory level\n// as the file that starts your express server\nvar lessCompiler = require( 'express-less-middleware' )();\n\n// if that's not the case, initialize it with the path to your public/client-side folder\n// the path should be relative to the directory where the file that starts your express server is\n// ex) var lessCompiler = require( 'express-less-middleware' )( '../path/to/public/folder' );\n\n\n// ....everything else that has to do with configuring\n\n// you should only use this when developing. Not meant for production\napp.configure( 'dev', function() {\n\t// this must be \"used\" before express.use( express.static() ) or it will not work (no next())\n\tapp.use( lessCompiler );\n});\n\n// ....other stuff relative to your express app\n\nhttp.createServer( app ).listen( 8000 );\n```\n\n####License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vernak2539/express-less-middleware/issues"
  },
  "homepage": "https://github.com/vernak2539/express-less-middleware",
  "_id": "express-less-middleware@1.1.3",
  "_shasum": "046f3c1c2c30804a786a2d695678d07170711d78",
  "_from": "express-less-middleware@",
  "_resolved": "https://registry.npmjs.org/express-less-middleware/-/express-less-middleware-1.1.3.tgz"
}
